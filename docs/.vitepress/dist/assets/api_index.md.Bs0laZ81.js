import{_ as t,c as a,a2 as i,o as n}from"./chunks/framework.B1nutZSU.js";const g=JSON.parse('{"title":"Admin REST API Overview","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),o={name:"api/index.md"};function s(d,e,r,c,h,l){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="admin-rest-api-overview" tabindex="-1">Admin REST API Overview <a class="header-anchor" href="#admin-rest-api-overview" aria-label="Permalink to &quot;Admin REST API Overview&quot;">​</a></h1><p>The Sushi Gateway Admin REST API provides an internal interface for managing and configuring your API gateway. It allows administrators retrieve information about the gateway state.</p><p>The Admin REST API is designed to automate gateway management tasks, making it easier to integrate with CI/CD pipelines or other external systems.</p><h2 id="accessing-the-admin-api" tabindex="-1">Accessing the Admin API <a class="header-anchor" href="#accessing-the-admin-api" aria-label="Permalink to &quot;Accessing the Admin API&quot;">​</a></h2><p>The Admin REST API is hosted on <strong>port 8081</strong> and communicates over HTTP. Ensure that the API is accessible only from trusted networks or through secure tunnels (e.g., VPN or SSH).</p><h3 id="base-url" tabindex="-1">Base URL <a class="header-anchor" href="#base-url" aria-label="Permalink to &quot;Base URL&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://&lt;gateway-host&gt;:8081</span></span></code></pre></div><h2 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-label="Permalink to &quot;Authentication&quot;">​</a></h2><p>The Admin REST API is secured through <strong>Basic Authentication (RFC 7617)</strong> and <strong>JWT (RFC 7519)</strong>. These methods ensure that only authorized users can access and modify gateway configurations. By design, the Admin API is not exposed publicly and is intended for internal use only.</p><h3 id="login-workflow" tabindex="-1">Login Workflow <a class="header-anchor" href="#login-workflow" aria-label="Permalink to &quot;Login Workflow&quot;">​</a></h3><ol><li><strong>Login Request</strong>: Clients authenticate via <code>POST /login</code> by sending a Base64-encoded username and password in the <code>Authorization</code> header.</li><li><strong>JWT Provision</strong>: Upon successful authentication, the API issues a JWT stored as an <code>HttpOnly</code> cookie.</li><li><strong>Subsequent Requests</strong>: The JWT cookie is included in requests to authenticate against the Admin API.</li></ol><h2 id="endpoints" tabindex="-1">Endpoints <a class="header-anchor" href="#endpoints" aria-label="Permalink to &quot;Endpoints&quot;">​</a></h2><p>Here are the endpoints available in the Admin REST API:</p><table tabindex="0"><thead><tr><th>Method</th><th>Endpoint</th><th>Description</th></tr></thead><tbody><tr><td><code>POST</code></td><td><code>/login</code></td><td>Login and authenticate via Basic Authentication.</td></tr><tr><td><code>DELETE</code></td><td><code>/logout</code></td><td>Log out by clearing the JWT cookie.</td></tr><tr><td><code>GET</code></td><td><code>/gateway</code></td><td>Retrieve the global gateway configuration (ProxyConfig).</td></tr><tr><td><code>GET</code></td><td><code>/gateway/config</code></td><td>Retrieve the gateway environment configuration.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For more detailed information on available endpoints, refer to the <strong><a href="./../api/endpoints.html">Admin API Reference</a></strong>.</p></div>',15)]))}const p=t(o,[["render",s]]);export{g as __pageData,p as default};
