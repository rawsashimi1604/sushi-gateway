import{_ as s,c as a,a2 as e,o as t}from"./chunks/framework.CJ3Fe3Yg.js";const u=JSON.parse('{"title":"API Key Authentication Plugin","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/key-auth.md","filePath":"plugins/key-auth.md"}'),n={name:"plugins/key-auth.md"};function l(o,i,h,p,r,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="api-key-authentication-plugin" tabindex="-1">API Key Authentication Plugin <a class="header-anchor" href="#api-key-authentication-plugin" aria-label="Permalink to &quot;API Key Authentication Plugin&quot;">​</a></h1><p>The API Key Authentication (<code>key_auth</code>) plugin provides a straightforward method to secure APIs by requiring clients to include a valid API key in their requests. This plugin validates the key against the configuration to grant or deny access.</p><h2 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h2><ol><li>The plugin checks for the API key in the following order: <ul><li><strong>Query Parameter</strong>: The key is expected as a query parameter named <code>apiKey</code>.</li><li><strong>HTTP Header</strong>: If not found in the query parameter, the key is then checked in the HTTP header under the <code>apiKey</code> field.</li></ul></li><li>If a valid API key is found, the request proceeds; otherwise, it is rejected with a <strong>401 Unauthorized</strong> response.</li></ol><h3 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h3><ul><li>Supports API key validation via query parameters and headers.</li><li>Configurable at global, service, or route levels.</li><li>Lightweight and easy to implement for simple authentication needs.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Learn how to integrate this plugin into your setup in the <strong><a href="./../plugins/">Plugins Overview</a></strong>.</p></div><h2 id="configuration-fields" tabindex="-1">Configuration Fields <a class="header-anchor" href="#configuration-fields" aria-label="Permalink to &quot;Configuration Fields&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Field</th><th>Type</th><th>Description</th><th>Example Value</th></tr></thead><tbody><tr><td><code>key</code></td><td>String</td><td>The API key required for validation.</td><td><code>123456</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use strong and unique API keys to enhance security.</p></div><h2 id="example-configuration" tabindex="-1">Example Configuration <a class="header-anchor" href="#example-configuration" aria-label="Permalink to &quot;Example Configuration&quot;">​</a></h2><p>Below is an example of configuring the API Key Authentication plugin:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key_auth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">​</a></h3><ul><li><strong><code>key</code></strong>: Defines the API key required for requests to pass authentication.</li></ul><h2 id="applying-the-plugin" tabindex="-1">Applying the Plugin <a class="header-anchor" href="#applying-the-plugin" aria-label="Permalink to &quot;Applying the Plugin&quot;">​</a></h2><p>The API Key Authentication plugin can be applied at various levels:</p><ol><li><strong>Global Level</strong>: Secures all services and routes with API key validation.</li><li><strong>Service Level</strong>: Requires API keys for all routes within a service.</li><li><strong>Route Level</strong>: Validates API keys for specific routes only.</li></ol><p>Example of applying the plugin globally:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key_auth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;enabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Apply the plugin at the route level for APIs requiring granular authentication control.</p></div><h2 id="use-cases" tabindex="-1">Use Cases <a class="header-anchor" href="#use-cases" aria-label="Permalink to &quot;Use Cases&quot;">​</a></h2><ol><li><strong>Simple API Security</strong>: Protect endpoints with a lightweight authentication mechanism.</li><li><strong>Internal APIs</strong>: Authenticate requests from internal services using predefined keys.</li><li><strong>Development and Testing</strong>: Use static API keys for quick and easy authentication in non-production environments.</li></ol><h2 id="example-request" tabindex="-1">Example Request <a class="header-anchor" href="#example-request" aria-label="Permalink to &quot;Example Request&quot;">​</a></h2><h3 id="query-parameter-example" tabindex="-1">Query Parameter Example <a class="header-anchor" href="#query-parameter-example" aria-label="Permalink to &quot;Query Parameter Example&quot;">​</a></h3><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /api/v1/resource?apiKey=123456 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span></span></code></pre></div><h3 id="http-header-example" tabindex="-1">HTTP Header Example <a class="header-anchor" href="#http-header-example" aria-label="Permalink to &quot;HTTP Header Example&quot;">​</a></h3><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /api/v1/resource </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 123456</span></span></code></pre></div><h2 id="tips-for-using-the-api-key-authentication-plugin" tabindex="-1">Tips for Using the API Key Authentication Plugin <a class="header-anchor" href="#tips-for-using-the-api-key-authentication-plugin" aria-label="Permalink to &quot;Tips for Using the API Key Authentication Plugin&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Rotate API keys periodically to maintain security and reduce risks from compromised keys.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Combine with Rate Limiting to prevent abuse of API keys.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Log unauthorized attempts to identify potential misuse or attacks.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Relying solely on API keys is not recommended for production environments. Combine with additional security mechanisms such as IP whitelisting or authentication plugins for enhanced protection.</p></div><p>For more plugins, visit the <strong><a href="./../plugins/">Plugins Overview</a></strong>.</p>`,34)]))}const c=s(n,[["render",l]]);export{u as __pageData,c as default};
