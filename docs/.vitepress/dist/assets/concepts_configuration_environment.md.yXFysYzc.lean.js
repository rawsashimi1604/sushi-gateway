import{_ as s,c as i,a2 as e,o as a}from"./chunks/framework.CJ3Fe3Yg.js";const k=JSON.parse('{"title":"Environment Variable Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/configuration/environment.md","filePath":"concepts/configuration/environment.md"}'),n={name:"concepts/configuration/environment.md"};function d(o,t,r,l,h,p){return a(),i("div",null,t[0]||(t[0]=[e(`<h1 id="environment-variable-configuration" tabindex="-1">Environment Variable Configuration <a class="header-anchor" href="#environment-variable-configuration" aria-label="Permalink to &quot;Environment Variable Configuration&quot;">​</a></h1><p>Environment variables in Sushi Gateway allow for dynamic configuration of the gateway without modifying files. This method is especially useful in containerized environments, enabling seamless updates and integration with external tools.</p><h2 id="commonly-used-environment-variables" tabindex="-1">Commonly Used Environment Variables <a class="header-anchor" href="#commonly-used-environment-variables" aria-label="Permalink to &quot;Commonly Used Environment Variables&quot;">​</a></h2><p>The following table lists the key environment variables supported by Sushi Gateway:</p><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Required</th><th>Example Value</th><th>Default Value</th></tr></thead><tbody><tr><td><code>PERSISTENCE_CONFIG</code></td><td>Defines the persistence mode (<code>dbless</code> for stateless, <code>db</code> for stateful).</td><td>Yes</td><td><code>dbless</code></td><td><code>dbless</code></td></tr><tr><td><code>PERSISTENCE_SYNC_INTERVAL</code></td><td>The interval (in seconds) for syncing in-memory configurations to the database.</td><td>No</td><td><code>5</code></td><td><code>5</code></td></tr><tr><td><code>DB_CONNECTION_HOST</code></td><td>Hostname or IP address of the database server.</td><td>Yes</td><td><code>localhost</code></td><td>-</td></tr><tr><td><code>DB_CONNECTION_PORT</code></td><td>Port number of the database server.</td><td>Yes</td><td><code>5432</code></td><td>-</td></tr><tr><td><code>DB_CONNECTION_NAME</code></td><td>Name of the database.</td><td>Yes</td><td><code>sushi</code></td><td>-</td></tr><tr><td><code>DB_CONNECTION_USER</code></td><td>Username for the database.</td><td>Yes</td><td><code>postgres</code></td><td>-</td></tr><tr><td><code>DB_CONNECTION_PASS</code></td><td>Password for the database user.</td><td>Yes</td><td><code>mysecretpassword</code></td><td>-</td></tr><tr><td><code>CONFIG_FILE_PATH</code></td><td>Path to the <code>config.json</code> file for declarative configurations.</td><td>No</td><td><code>/app/config.json</code></td><td><code>/app/config.json</code></td></tr><tr><td><code>ADMIN_USER</code></td><td>Username for the Admin API.</td><td>Yes</td><td><code>admin</code></td><td><code>admin</code></td></tr><tr><td><code>ADMIN_PASSWORD</code></td><td>Password for the Admin API user.</td><td>Yes</td><td><code>changeme</code></td><td><code>changeme</code></td></tr><tr><td><code>SERVER_CERT_PATH</code></td><td>Path to the server certificate for HTTPS.</td><td>No</td><td><code>/path/to/cert.crt</code></td><td>-</td></tr><tr><td><code>SERVER_KEY_PATH</code></td><td>Path to the server private key for HTTPS.</td><td>No</td><td><code>/path/to/key.pem</code></td><td>-</td></tr><tr><td><code>CA_CERT_PATH</code></td><td>Path to the Certificate Authority (CA) file for mutual TLS (mTLS).</td><td>No</td><td><code>/path/to/ca.crt</code></td><td>-</td></tr></tbody></table><h2 id="example-configuration" tabindex="-1">Example Configuration <a class="header-anchor" href="#example-configuration" aria-label="Permalink to &quot;Example Configuration&quot;">​</a></h2><p>Here’s an example of using environment variables to configure Sushi Gateway in a Docker container:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PERSISTENCE_CONFIG=db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PERSISTENCE_SYNC_INTERVAL=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_CONNECTION_HOST=localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_CONNECTION_PORT=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5432</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_CONNECTION_NAME=sushi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_CONNECTION_USER=postgres</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_CONNECTION_PASS=mysecretpassword</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ADMIN_USER=admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ADMIN_PASSWORD=securepassword</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8008:8008</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8443:8443</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8081:8081</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  rawsashimi/sushi-proxy:latest</span></span></code></pre></div><h2 id="tips-for-using-environment-variables" tabindex="-1">Tips for Using Environment Variables <a class="header-anchor" href="#tips-for-using-environment-variables" aria-label="Permalink to &quot;Tips for Using Environment Variables&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use a <code>.env</code> file to manage environment variables for local development and testing. Load it using tools like <code>docker-compose</code> or <code>dotenv</code> libraries.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Ensure sensitive variables, such as database credentials, are stored securely using secret management tools (e.g., AWS Secrets Manager, HashiCorp Vault).</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Combine environment variables with declarative configurations for maximum flexibility in hybrid setups.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Validate the values of required environment variables during startup to prevent misconfiguration.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For a deeper understanding of declarative configurations, visit the <strong><a href="./files.html">Declarative Configuration Guide</a></strong>.</p></div>`,14)]))}const C=s(n,[["render",d]]);export{k as __pageData,C as default};
