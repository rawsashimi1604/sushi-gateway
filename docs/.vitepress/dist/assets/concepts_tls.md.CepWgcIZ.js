import{_ as t,c as a,a2 as s,o as i}from"./chunks/framework.B1nutZSU.js";const h=JSON.parse('{"title":"TLS Certificates","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/tls.md","filePath":"concepts/tls.md"}'),n={name:"concepts/tls.md"};function o(r,e,c,l,p,d){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="tls-certificates" tabindex="-1">TLS Certificates <a class="header-anchor" href="#tls-certificates" aria-label="Permalink to &quot;TLS Certificates&quot;">​</a></h1><p>Sushi Gateway requires TLS certificates for secure communication on port <code>8443</code>. You can either use auto-generated certificates for development or provide your own certificates for production use.</p><h2 id="auto-generated-certificates" tabindex="-1">Auto-generated Certificates <a class="header-anchor" href="#auto-generated-certificates" aria-label="Permalink to &quot;Auto-generated Certificates&quot;">​</a></h2><p>For development environments, Sushi Gateway can automatically generate self-signed certificates. This is the easiest way to get started:</p><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Don&#39;t set SERVER_CERT_PATH and SERVER_KEY_PATH</span></span>
<span class="line"><span># Certificates will be auto-generated in the current directory</span></span></code></pre></div><p>The auto-generated certificates:</p><ul><li>Are self-signed</li><li>Valid for 365 days</li><li>Include &quot;localhost&quot; and &quot;sushi.gateway.local&quot; as DNS names</li><li>Are stored as <code>server.crt</code> and <code>server.key</code> in the current directory</li></ul><h2 id="manual-certificates" tabindex="-1">Manual Certificates <a class="header-anchor" href="#manual-certificates" aria-label="Permalink to &quot;Manual Certificates&quot;">​</a></h2><p>For production environments, you should provide your own certificates:</p><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Required for TLS</span></span>
<span class="line"><span>SERVER_CERT_PATH=/path/to/server.crt</span></span>
<span class="line"><span>SERVER_KEY_PATH=/path/to/server.key</span></span></code></pre></div><p>Both <code>SERVER_CERT_PATH</code> and <code>SERVER_KEY_PATH</code> must be provided together. If either one is set, the other must also be set.</p><h2 id="mtls-support-optional" tabindex="-1">mTLS Support (Optional) <a class="header-anchor" href="#mtls-support-optional" aria-label="Permalink to &quot;mTLS Support (Optional)&quot;">​</a></h2><p>For mutual TLS authentication, you can provide a CA certificate:</p><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Optional - only needed for mTLS</span></span>
<span class="line"><span>CA_CERT_PATH=/path/to/ca.crt</span></span></code></pre></div><p>The CA certificate is only required if you want to validate client certificates using mTLS. If you&#39;re not using mTLS, you can omit this setting.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>For more information regarding environment configuration, check out the <a href="./configuration/environment.html">Environment Variable Guide</a>.</p></div>`,16)]))}const f=t(n,[["render",o]]);export{h as __pageData,f as default};
